(undo-tree-save-format-version . 1)
"9e461684f6eac18658fc2db941dc6c45288bc8f7"
[nil nil nil nil (25788 59613 131666 908000) 0 nil]
([nil nil ((nil rear-nonsticky nil 642 . 643) (nil fontified nil 633 . 643) (nil fontified nil 630 . 633) (nil fontified nil 626 . 630) (nil fontified nil 581 . 626) (nil fontified nil 577 . 581) (nil fontified nil 572 . 577) (nil fontified nil 536 . 572) (nil fontified nil 481 . 536) (nil fontified nil 479 . 481) (nil fontified nil 449 . 479) (nil fontified nil 422 . 449) (nil fontified nil 421 . 422) (nil fontified nil 386 . 421) (nil fontified nil 356 . 386) (nil fontified nil 335 . 356) (nil fontified nil 314 . 335) (nil fontified nil 298 . 314) (nil fontified nil 286 . 298) (nil fontified nil 285 . 286) (nil fontified nil 269 . 285) (nil fontified nil 268 . 269) (nil fontified nil 182 . 268) (nil fontified nil 130 . 182) (nil fontified nil 54 . 130) (nil fontified nil 40 . 54) (nil fontified nil 1 . 40) (1 . 643) (t . -1)) nil (25788 59613 131654 242000) 0 nil])
([nil nil ((#("** Objective 
" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-hide invisible org-superstar-hide isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 1 2 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face (org-superstar-header-bullet org-level-2) composition (1 1 [9675]) isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 2 3 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2 isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 3 13 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2 isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary) 13 14 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . 40) (undo-tree-id208 . -12) (undo-tree-id209 . -13) (undo-tree-id210 . -14) (undo-tree-id211 . -14) (undo-tree-id212 . -14) (undo-tree-id213 . -14) (undo-tree-id214 . -14) (undo-tree-id215 . -14) (undo-tree-id216 . -14) (undo-tree-id217 . -14) (undo-tree-id218 . -14) (undo-tree-id219 . -14) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -12) (undo-tree-id234 . -12) (undo-tree-id235 . -12) (undo-tree-id236 . -12) (undo-tree-id237 . -12) (undo-tree-id238 . -12) (undo-tree-id239 . -12) (undo-tree-id240 . -12) (undo-tree-id241 . -12) (undo-tree-id242 . -12) (undo-tree-id243 . -12) (undo-tree-id244 . -12) (undo-tree-id245 . -12) (undo-tree-id246 . -14) (undo-tree-id247 . -12) (undo-tree-id248 . -12) (undo-tree-id249 . -12) (undo-tree-id250 . -12) (undo-tree-id251 . -12) (undo-tree-id252 . -12) (undo-tree-id253 . -12) (undo-tree-id254 . -12) (undo-tree-id255 . -14) (undo-tree-id256 . -14) 52 (t 25788 59613 147225 403000)) nil (25788 59670 59802 204000) 0 nil])
([nil nil ((40 . 44)) nil (25788 59670 59632 321000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . -39) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (#(" " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . -40) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (#("*" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -41) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("     " 0 2 (face org-indent) 2 5 (face org-indent)))) . -42) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) 43) nil (25788 59670 59615 835000) 0 nil])
([nil nil ((39 . 40)) nil (25788 59670 58440 935000) 0 nil])
([nil nil ((40 . 42)) nil (25788 59670 58438 398000) 0 nil])
([nil nil ((#(")" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -40) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . 1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#(")" 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) fontified t)) . -41) (undo-tree-id56 . -1) (undo-tree-id57 . 1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 42) nil (25788 59670 58430 870000) 0 nil])
([nil nil ((40 . 43)) nil (25788 59670 58325 305000) 0 nil])
([nil nil ((43 . 51)) nil (25788 59670 58323 41000) 0 nil])
([nil nil ((#("," 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -50) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) 51) nil (25788 59670 58319 427000) 0 nil])
([nil nil ((50 . 51)) nil (25788 59670 58301 853000) 0 nil])
([nil nil ((#("r" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . -50) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 51) nil (25788 59670 58297 866000) 0 nil])
([nil nil ((50 . 51)) nil (25788 59670 58276 451000) 0 nil])
([nil nil ((#("w" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2)) . 50) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) nil (25788 59670 58270 788000) 0 nil])
([nil nil ((50 . 51)) nil (25788 59753 513764 838000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified nil isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary face org-level-2)) . 281) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (282 . 283) (t 25788 59670 88225 50000)) nil (25788 59775 962566 437000) 0 nil] [nil nil ((272 . 282) (#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified nil face org-level-2 isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . 271) (272 . 273) (#("seudo-code" 0 10 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t face org-level-2 isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . 271) (undo-tree-id257 . -6) (undo-tree-id258 . -6) (undo-tree-id259 . -6) (undo-tree-id260 . -6) (undo-tree-id261 . -6) (undo-tree-id262 . -6) (undo-tree-id263 . -6) (undo-tree-id264 . -6) (undo-tree-id265 . -6) (undo-tree-id266 . -6) (t 25788 59670 88225 50000)) ((271 . 281) (#("
" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified nil isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . 272) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (271 . 272) (#("seudo-code" 0 10 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . 272)) (25788 59753 508380 158000) 0 nil])
([nil nil ((282 . 286)) nil (25788 59775 962559 240000) 0 nil])
nil
([nil nil ((#(" " 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary face org-level-2)) . -284) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (#("*" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary face org-level-2)) . -285) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) 286) nil (25788 59775 962553 333000) 0 nil])
([nil nil ((284 . 286)) nil (25788 59775 962506 455000) 0 nil])
([nil nil ((#("
" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . -281) (undo-tree-id277 . -1) (undo-tree-id278 . 1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("*" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . -282) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (#("*" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . -283) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (#("*" 0 1 (line-prefix #("    " 0 4 (face org-indent)) wrap-prefix #("    " 0 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary font-lock-multiline t org-emphasis t)) . -284) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (#(" " 0 1 (line-prefix #("**" 0 2 (face org-indent)) wrap-prefix #("***** " 0 2 (face org-indent) 2 6 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary face org-level-3)) . -285) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) 286) nil (25788 59775 962482 806000) 0 nil])
([nil current ((#("
" 0 1 (line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) fontified t isearch-open-invisible org-fold-core--isearch-show isearch-open-invisible-temporary org-fold-core--isearch-show-temporary)) . -281) (undo-tree-id269 . -1) (undo-tree-id270 . 1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) 282) nil (25788 59775 961689 314000) 0 nil])
nil
